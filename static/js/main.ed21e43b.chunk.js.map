{"version":3,"sources":["img/star-ship.jpg","context/compare/compareContext.js","helpers/common.js","components/ShipCard.js","context/api/apiContext.js","components/Compare/TBody.js","components/Compare/TableRow.js","components/Compare/TableCompareList.js","routes/index.js","pages/Home.js","pages/SwShip.js","pages/Compare.js","pages/NotFound404.js","components/List/ListItem.js","components/List/List.js","components/SearchForm.js","components/NavBar.js","helpers/api.js","context/api/ApiState.js","context/compare/compareReducer.js","context/types.js","context/compare/CompareState.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CompareContext","createContext","findIndexById","id","arr","findIndex","s","inArray","ShipCard","btn","ship","useContext","compareArr","add","remove","Button","variant","onClick","Col","xs","md","xl","className","Card","Img","src","image","Body","Title","name","Text","model","manufacturer","to","urlBuilder","ApiContext","TBody","children","TableRow","data","alt","cost_in_credits","length","max_atmosphering_speed","crew","passengers","cargo_capacity","consumables","hyperdrive_rating","MGLT","starship_class","TableCompareList","trArr","tableData","map","key","Table","striped","bordered","hover","routes","path","component","content","useState","starShips","setStarShips","getDataFromAPI","useEffect","then","starShip","Row","props","match","params","ships","setShips","compareArrWihtFullObjects","el","style","textAlign","exact","routesMap","replace","forEach","route","ListItem","cliclHandler","item","ListGroup","Item","List","found","SearchForm","value","setValue","filter","some","str","toLowerCase","searchValue","trim","indexOf","Form","inline","FormControl","type","placeholder","onChange","e","target","changeHandler","NavBar","Navbar","collapseOnSelect","expand","bg","Container","Brand","Toggle","aria-controls","Collapse","Nav","home","activeClassName","compare","getData","url","fetch","response","json","ApiState","Provider","console","log","promises","starships","starship","push","Promise","all","index","handlers","state","payload","compareReducer","action","DEFAULT","CompareState","useReducer","dispatch","App","routeComponents","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ed21e43b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/star-ship.6f011147.jpg\";","import { createContext } from 'react';\r\n\r\nexport const CompareContext = createContext();","const findIndexById = (id, arr) => {\r\n  return arr.findIndex(s => s.id === id);\r\n}\r\n\r\nconst inArray = (id, arr) => {\r\n  let index = findIndexById(id, arr);\r\n  return index !== -1;\r\n}\r\n\r\nconst inString = (str, searchValue) => {\r\n  let index = str.indexOf(searchValue);\r\n  return index !== -1;\r\n}\r\n\r\nexport { findIndexById, inArray, inString }","import React, { useContext } from 'react';\r\nimport { Card, Col, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { urlBuilder } from '../routes';\r\nimport { CompareContext } from '../context/compare/compareContext';\r\nimport { inArray } from '../helpers/common';\r\nimport image from '../img/star-ship.jpg';\r\n\r\nexport const ShipCard = ({ship}) => {\r\n\r\n\tconst { compareArr, add, remove } = useContext(CompareContext);\r\n\r\n\tlet btn;\r\n\tif (inArray(ship.id, compareArr)) {\r\n\t\tbtn = <Button variant=\"danger\" onClick={() => remove(ship.id)}>Remove</Button>;\r\n\t} else {\r\n\t\tbtn = <Button variant=\"primary\" onClick={() => add(ship.id)}>Add to compare</Button>;\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<Col xs={12} md={6} xl={4} className=\"mb-4\">\r\n\t\t\t<Card>\r\n\t\t\t\t<Card.Img variant=\"top\" src={image} />\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Card.Title>{ship.name}</Card.Title>\r\n\t\t\t\t\t<Card.Text>\r\n\t\t\t\t\t\t<span><strong>Model:</strong> {ship.model}</span><br/>\r\n\t\t\t\t\t\t<span><strong>Manufacturer:</strong> {ship.manufacturer}</span><br/>\r\n\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t<Link to={urlBuilder('sw-ship', {id: ship.id})}>\r\n\t\t\t\t\t\tGet more...\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t\t{ btn }\r\n\t\t\t</Card>\r\n\t\t</Col>\r\n\t)\r\n}\r\n\r\n// \"name\": \"EF76 Nebulon-B escort frigate\",\r\n// \"model\": \"EF76 Nebulon-B escort frigate\",\r\n// \"manufacturer\": \"Kuat Drive Yards\",\r\n// \"cost_in_credits\": \"8500000\",\r\n// \"length\": \"300\",\r\n// \"max_atmosphering_speed\": \"800\",\r\n// \"crew\": \"854\",\r\n// \"passengers\": \"75\",\r\n// \"cargo_capacity\": \"6000000\",\r\n// \"consumables\": \"2 years\",\r\n// \"hyperdrive_rating\": \"2.0\",\r\n// \"MGLT\": \"40\",\r\n// \"starship_class\": \"Escort ship\",","import { createContext } from 'react';\r\n\r\nexport const ApiContext = createContext();","import React from 'react';\r\n\r\nexport const TBody = ({ children }) => {\r\n\treturn (\r\n\t\t<tbody className=\"table__body\">\r\n\t\t\t{children}\r\n\t\t</tbody>\r\n\t)\r\n}\r\n","import React, { useContext } from 'react';\r\nimport image from '../../img/star-ship.jpg';\r\nimport { Button } from 'react-bootstrap';\r\nimport { CompareContext } from '../../context/compare/compareContext';\r\n\r\nexport const TableRow = ({ data }) => {\r\n\tconst { remove } = useContext(CompareContext);\r\n\r\n\treturn (\r\n\t\t<tr className=\"table__row\">\r\n\t\t\t<td className=\"table__col\">{ data.name } <Button variant=\"danger\" onClick={ () => remove(data.id) }>&times;</Button></td>\r\n\t\t\t<td className=\"table__img\"><img className=\"table__image\" src={ image } alt=\"logo\"/></td>\r\n\t\t\t<td className=\"table__col\">{ data.model }</td>\r\n\t\t\t<td className=\"table__col\">{ data.manufacturer }</td>\r\n\t\t\t<td className=\"table__col\">{ data.cost_in_credits }</td>\r\n\t\t\t<td className=\"table__col\">{ data.length }</td>\r\n\t\t\t<td className=\"table__col\">{ data.max_atmosphering_speed }</td>\r\n\t\t\t<td className=\"table__col\">{ data.crew }</td>\r\n\t\t\t<td className=\"table__col\">{ data.passengers }</td>\r\n\t\t\t<td className=\"table__col\">{ data.cargo_capacity }</td>\r\n\t\t\t<td className=\"table__col\">{ data.consumables }</td>\r\n\t\t\t<td className=\"table__col\">{ data.hyperdrive_rating }</td>\r\n\t\t\t<td className=\"table__col\">{ data.MGLT }</td>\r\n\t\t\t<td className=\"table__col\">{ data.starship_class }</td>\r\n\t\t</tr>\r\n\t)\r\n}\r\n","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport { TBody } from './TBody';\r\nimport { TableRow } from './TableRow';\r\n\r\nexport const TableCompareList = ({ tableData }) => {\r\n\tconst trArr = tableData.map(ship => <TableRow data={ship} key={ship.id} />);\r\n\r\n\treturn (\r\n\t\t<div className=\"overflow\">\r\n\t\t\t<Table className=\"table\" striped bordered hover variant=\"dark\">\r\n\t\t\t\t<TBody>\r\n\t\t\t\t\t{ trArr }\r\n\t\t\t\t</TBody>\r\n\t\t\t</Table>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import { Home } from \"../pages/Home\";\r\nimport { Compare } from \"../pages/Compare\";\r\nimport { NotFound404 } from \"../pages/NotFound404\";\r\nimport { SwShip } from \"../pages/SwShip\";\r\n\r\nconst routes = [\r\n\t{\r\n\t\tname: 'home',\r\n\t\tpath: '/',\r\n\t\tcomponent: Home\r\n\t},\r\n\t{\r\n\t\tname: 'sw-ship',\r\n\t\tpath: '/sw-ship/:id',\r\n\t\tcomponent: SwShip\r\n\t},\r\n\t{\r\n\t\tname: 'compare',\r\n\t\tpath: '/compare',\r\n\t\tcomponent: Compare\r\n\t},\r\n\t{\r\n\t\tpath: '**',\r\n\t\tcomponent: NotFound404,\r\n\t\texact: false\r\n\t}\r\n];\r\n\r\nconst routesMap = {};\r\n\r\nroutes.forEach(route => {\r\n\tif('name' in route){\r\n\t\troutesMap[route.name] = route.path;\r\n\t}\r\n});\r\n\r\nfunction urlBuilder(name, params){\r\n\tif(name in routesMap){\r\n\t\tlet path = routesMap[name]; // product/:id\r\n\r\n\t\tfor(let key in params){\r\n\t\t\tpath = path.replace(`:${key}`, params[key]);\r\n\t\t}\r\n\r\n\t\treturn path;\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport { routes, routesMap, urlBuilder };","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Row } from 'react-bootstrap';\r\nimport { ShipCard } from '../components/ShipCard';\r\nimport { ApiContext } from '../context/api/apiContext';\r\n\r\nexport const Home = () => {\r\n\tconst [starShips, setStarShips] = useState([]);\r\n\t\r\n\tconst { getDataFromAPI } = useContext(ApiContext);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataFromAPI().then(data => {\r\n\t\t\tconst starShips = data.map(starShip => <ShipCard ship={starShip} key={starShip.name} />);\r\n\t\t\tsetStarShips(starShips);\r\n\t\t});\r\n  }, [getDataFromAPI]);\r\n\r\n\tlet content;\r\n\r\n\tif (starShips.length) {\r\n\t\tcontent = <Row>{ starShips }</Row>;\r\n\t} else {\r\n\t\tcontent = <h4>Loading...</h4>;\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>StarShips list</h1>\r\n\t\t\t<hr/>\r\n\t\t\t{ content }\r\n\t\t</>\r\n\t)\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { ApiContext } from '../context/api/apiContext';\r\nimport { CompareContext } from '../context/compare/compareContext';\r\nimport { findIndexById, inArray } from '../helpers/common';\r\nimport { Button } from 'react-bootstrap';\r\nimport image from '../img/star-ship.jpg';\r\n\r\nexport const SwShip = props => {\r\n\tconst id = +props.match.params.id;\r\n\tconst [ships, setShips] = useState([]);\r\n\tconst { getDataFromAPI } = useContext(ApiContext);\r\n\tconst { compareArr, add, remove } = useContext(CompareContext);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataFromAPI().then(data => setShips(data));\t\r\n\t}, [getDataFromAPI]);\r\n\r\n\tlet content;\r\n\tif (ships.length) {\r\n\t\tconst ship = ships[findIndexById(id, ships)];\r\n\r\n\t\tlet btn;\r\n\t\tif (inArray(ship.id, compareArr)) {\r\n\t\t\tbtn = <Button variant=\"danger\" onClick={() => remove(ship.id)}>Remove</Button>;\r\n\t\t} else {\r\n\t\t\tbtn = <Button variant=\"primary\" onClick={() => add(ship.id)}>Add to compare</Button>;\r\n\t\t}\r\n\r\n\t\tcontent = (\r\n\t\t\t<div className=\"ship\">\r\n\t\t\t\t<div className=\"ship__content\">\r\n\t\t\t\t\t<div className=\"ship__logo\">\r\n\t\t\t\t\t\t<img className=\"ship__img\" src={ image } alt=\"ship\"/>\r\n\t\t\t\t\t\t{ btn }\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"ship__params\">\r\n\t\t\t\t\t\t<h1>{ship.name}</h1>\r\n\t\t\t\t\t\t<p><strong>model: </strong>{ship.model}</p>\r\n\t\t\t\t\t\t<p><strong>manufacturer: </strong>{ship.manufacturer}</p>\r\n\t\t\t\t\t\t<p><strong>cost: </strong>{ship.cost_in_credits}</p>\r\n\t\t\t\t\t\t<p><strong>length: </strong>{ship.length} meters</p>\r\n\t\t\t\t\t\t<p><strong>max atmosphering speed: </strong>{ship.max_atmosphering_speed}</p>\r\n\t\t\t\t\t\t<p><strong>crew: </strong>{ship.crew}</p>\r\n\t\t\t\t\t\t<p><strong>passengers: </strong>{ship.passengers}</p>\r\n\t\t\t\t\t\t<p><strong>cargo: </strong>{ship.cargo_capacity}</p>\r\n\t\t\t\t\t\t<p><strong>consumables: </strong>{ship.consumables}</p>\r\n\t\t\t\t\t\t<p><strong>hyperdrive rating: </strong>{ship.hyperdrive_rating}</p>\r\n\t\t\t\t\t\t<p><strong>MGLT: </strong>{ship.MGLT}</p>\r\n\t\t\t\t\t\t<p><strong>starship class: </strong>{ship.starship_class}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t} else {\r\n\t\tcontent = <h4>Loading...</h4>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{ content }\r\n\t\t</>\r\n\t)\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { ApiContext } from '../context/api/apiContext';\r\nimport { CompareContext } from '../context/compare/compareContext';\r\nimport { TableCompareList } from '../components/Compare/TableCompareList';\r\nimport { findIndexById } from '../helpers/common';\r\n\r\nexport const Compare = () => {\r\n\tconst [ships, setShips] = useState([]);\r\n\tconst { getDataFromAPI } = useContext(ApiContext);\r\n\tconst { compareArr } = useContext(CompareContext);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataFromAPI().then(data => setShips(data));\t\r\n\t}, [getDataFromAPI]);\r\n\r\n\tlet content;\r\n\tif (ships.length) {\r\n\t\tconst compareArrWihtFullObjects = compareArr.map(el => ships[findIndexById(el.id, ships)]);\r\n\r\n\t\tif (!compareArrWihtFullObjects.length) {\r\n\t\t\tcontent = (\r\n\t\t\t\t<div style={{textAlign: 'center'}}>\r\n\t\t\t\t\t<h4>There is nothing to compare</h4>\r\n\t\t\t\t\t<p>Add star-ships from the form above or <Link to=\"/\">home page</Link> home page</p>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tcontent = <TableCompareList tableData={compareArrWihtFullObjects} />;\r\n\t\t}\r\n\t\t\r\n\t} else {\r\n\t\tcontent = <h4>Loading...</h4>;\r\n\t}\r\n\t\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>Compare ships</h1>\r\n\t\t\t<hr/>\r\n\t\t\t{ content }\r\n\t\t</>\r\n\t)\r\n}","import React from 'react'\r\n\r\nexport const NotFound404 = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>Page not found 404</h1>\r\n\t\t</>\r\n\t)\r\n}\r\n","import React from 'react';\r\nimport { ListGroup} from 'react-bootstrap';\r\n\r\nexport const ListItem = ({ cliclHandler, item }) => {\r\n  return (\r\n    <ListGroup.Item className=\"search__list-item\"\r\n                    onClick={() => cliclHandler(item.id)}\r\n    >\r\n      { item.name }\r\n    </ListGroup.Item>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { ListGroup} from 'react-bootstrap';\r\nimport { ListItem } from './ListItem';\r\n\r\nexport const List = ({ found, cliclHandler }) => {\r\n  \r\n  let content;\r\n\r\n  content = found.map(item => <ListItem  key={ item.id } item={ item } cliclHandler={ cliclHandler } />)\r\n\r\n  return (\r\n    <ListGroup className=\"search__list\">\r\n      { content }\r\n    </ListGroup>\r\n  )\r\n}\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { Form, FormControl } from 'react-bootstrap';\r\nimport { ApiContext } from '../context/api/apiContext';\r\nimport { CompareContext } from '../context/compare/compareContext';\r\nimport { inString } from '../helpers/common';\r\nimport { List } from './List/List';\r\n\r\nexport const SearchForm = () => {\r\n\tconst [value, setValue] = useState('');\r\n\tconst [starShips, setStarShips] = useState([]);\r\n\tconst { getDataFromAPI } = useContext(ApiContext);\r\n\tconst { compareArr, add } = useContext(CompareContext);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDataFromAPI().then(data => setStarShips(data))\r\n\t}, [getDataFromAPI]);\r\n\t\r\n\tconst changeHandler = (e) => {\r\n\t\tsetValue(e.target.value);\r\n\t}\r\n\r\n\tconst cliclHandler = id => {\r\n\t\tadd(id);\r\n\t\tsetValue('');\r\n\t}\r\n\r\n\tlet found;\r\n\tif (starShips.length) {\r\n\t\tlet searchArr = starShips.filter(starShip => {\r\n\t\t\tlet truthy = compareArr.some(el => el.id === starShip.id);\r\n\t\t\treturn !truthy;\r\n\t\t});\r\n\r\n\t\tfound = searchArr.filter(ship => {\r\n\t\t\treturn inString(ship.name.toLowerCase(), value.trim().toLowerCase());\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Form inline className=\"search\">\r\n\t\t\t<FormControl type=\"text\"\r\n\t\t\t\t\t\t\t\t\t placeholder=\"Search to compare\" \r\n\t\t\t\t\t\t\t\t\t className=\"mr-sm-2\" \r\n\t\t\t\t\t\t\t\t\t value={ value }\r\n\t\t\t\t\t\t\t\t\t onChange={ e => changeHandler(e) }\r\n\t\t\t/>\r\n\t\t\r\n\t\t{ value && ( <List found={ found } cliclHandler={ cliclHandler } /> )}\r\n\t\t\r\n\t\t</Form>\r\n\t)\r\n}\r\n","import React from 'react';\r\nimport {Navbar, Nav, Container} from 'react-bootstrap';\r\nimport {Link, NavLink} from \"react-router-dom\";\r\nimport {routesMap} from '../routes';\r\nimport { SearchForm } from './SearchForm';\r\n\r\nexport const NavBar = () => {\r\n\treturn (\r\n\t\t<Navbar collapseOnSelect expand=\"lg\" className=\"navbar\" bg=\"primary\" variant=\"dark\">\r\n\t\t\t<Container>\r\n\t\t\t\t<Navbar.Brand>\r\n\t\t\t\t\t<Link className=\"logo\" to=\"/\">SWAPI</Link>\r\n\t\t\t\t</Navbar.Brand>\r\n\t\t\t\t<Navbar.Toggle aria-controls=\"responsive-navbar-nav\" className=\"toggle\" />\r\n\t\t\t \t<Navbar.Collapse id=\"responsive-navbar-nav\" className=\"toggle\">\r\n\t\t\t\t\t<Nav className=\"mr-auto ml-5\">\r\n\t\t\t\t\t\t<NavLink exact to={routesMap.home} className=\"nav-link\" activeClassName=\"active\">Home</NavLink>\r\n\t\t\t\t\t\t<NavLink to={routesMap.compare} className=\"nav-link\" activeClassName=\"active\">Compare</NavLink>\r\n\t\t\t\t\t</Nav>\r\n\t\t\t\t\t<SearchForm />\r\n\t\t\t\t</Navbar.Collapse>\r\n\t\t\t</Container>\r\n\t\t</Navbar>\r\n\t)\r\n}","export const getData = url => {\r\n\treturn fetch(url).then(response => {\r\n\t\treturn response.json();\r\n\t});\r\n}","import React from 'react';\r\nimport { ApiContext } from './apiContext';\r\nimport { getData } from '../../helpers/api';\r\n\r\nexport const ApiState = ({children}) => {\r\n\tconst getDataFromAPI = () => {\r\n\t\tconst url = \"https://swapi.dev/api/films/2/\";\r\n\r\n\t\treturn getData(url).then(data => {\r\n\t\t\tconsole.log('data: ', data);\r\n\t\t\tlet promises = [];\r\n\t\r\n\t\t\tdata.starships.forEach(starship => {\r\n\t\t\t\tpromises.push(getData(starship));\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\treturn Promise.all(promises).then(data => {\r\n\t\t\t\tconst starShips = data.map((starShip, index) => {\r\n\t\t\t\t\tstarShip.id = index;\r\n\t\t\t\t\treturn starShip;\r\n\t\t\t\t});\r\n\t\t\t\treturn starShips;\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ApiContext.Provider value={{ getDataFromAPI }}>\r\n\t\t\t{ children }\r\n\t\t</ApiContext.Provider>\r\n\t)\r\n}","import { ADD_COMPARE, REMOVE_COMPARE } from \"../types\";\r\n\r\nconst handlers = {\r\n\t[ADD_COMPARE]: (state, { payload }) => {\r\n\t\treturn [...state, ...payload];\r\n\t},\r\n\t[REMOVE_COMPARE]: (state, { payload }) => {\r\n\t\treturn state.filter(s => s.id !== payload);\r\n\t},\r\n\tDEFAULT: state => state\r\n}\r\n\r\nexport const compareReducer = (state, action) => {\r\n\tconst handle = handlers[action.type] || handlers.DEFAULT;\r\n\treturn handle(state, action); \r\n}","export const ADD_COMPARE = 'ADD_COMPARE';\r\nexport const REMOVE_COMPARE = 'REMOVE_COMPARE';","import React, { useReducer } from 'react';\r\nimport { CompareContext } from './compareContext';\r\nimport { compareReducer } from './compareReducer';\r\nimport { ADD_COMPARE, REMOVE_COMPARE } from '../types';\r\n\r\nexport const CompareState = ({children}) => {\r\n\tconst [compareArr, dispatch] = useReducer(compareReducer, []);\r\n\r\n\tconst add = id => {\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_COMPARE,\r\n\t\t\tpayload: [{id}]\r\n\t\t});\r\n\t}\r\n\r\n\tconst remove = id => {\r\n\t\tdispatch({\r\n\t\t\ttype: REMOVE_COMPARE,\r\n\t\t\tpayload: id\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<CompareContext.Provider value={{\r\n\t\t\tadd, remove, compareArr\r\n\t\t}}>\r\n\t\t\t{ children }\r\n\t\t</CompareContext.Provider>\r\n\t)\r\n}","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport { NavBar } from './components/NavBar';\nimport { routes } from './routes';\nimport { ApiState } from './context/api/ApiState';\nimport { CompareState } from './context/compare/CompareState';\n\nfunction App() {\n  const routeComponents = routes.map(route => {\n    return <Route \n      key={route.path}\n      path={route.path} \n      component={route.component} \n      exact={ 'exact' in route ? route.exact : true } \n    />\n  });\n\n  return (\n    <ApiState>\n      <CompareState>\n        <BrowserRouter>\n          <NavBar />\n          <Container>\n            <Switch>\n              { routeComponents }\n            </Switch>\n          </Container>\n        </BrowserRouter>\n      </CompareState>\n    </ApiState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}